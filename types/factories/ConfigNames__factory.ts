/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ConfigNames } from "../ConfigNames";

export class ConfigNames__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ConfigNames> {
    return super.deploy(overrides || {}) as Promise<ConfigNames>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConfigNames {
    return super.attach(address) as ConfigNames;
  }
  connect(signer: Signer): ConfigNames__factory {
    return super.connect(signer) as ConfigNames__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConfigNames {
    return new Contract(address, _abi, signerOrProvider) as ConfigNames;
  }
}

const _abi = [
  {
    inputs: [],
    name: "DEV_FEE_PERCENT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60b5610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80635e6a645e146038575b600080fd5b603e6052565b604051604991906076565b60405180910390f35b7f4445565f4645455f50455243454e54000000000000000000000000000000000081565b9081526020019056fea2646970667358221220c042f64da954bc90ab41c98062fc3c0e7ca49544783266951a0507909e592aae64736f6c63430008000033";
