/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC20 } from "../ERC20";

export class ERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides
  ): Promise<ERC20> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    ) as Promise<ERC20>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526002805460ff191660121790553480156200001e57600080fd5b5060405162000bce38038062000bce8339810160408190526200004191620001db565b8251620000569060009060208601906200008a565b5081516200006c9060019060208501906200008a565b506002805460ff191660ff9290921691909117905550620002af9050565b82805462000098906200025c565b90600052602060002090601f016020900481019282620000bc576000855562000107565b82601f10620000d757805160ff191683800117855562000107565b8280016001018555821562000107579182015b8281111562000107578251825591602001919060010190620000ea565b506200011592915062000119565b5090565b5b808211156200011557600081556001016200011a565b600082601f83011262000141578081fd5b81516001600160401b03808211156200015e576200015e62000299565b6040516020601f8401601f191682018101838111838210171562000186576200018662000299565b60405283825285840181018710156200019d578485fd5b8492505b83831015620001c05785830181015182840182015291820191620001a1565b83831115620001d157848185840101525b5095945050505050565b600080600060608486031215620001f0578283fd5b83516001600160401b038082111562000207578485fd5b620002158783880162000130565b945060208601519150808211156200022b578384fd5b506200023a8682870162000130565b925050604084015160ff8116811462000251578182fd5b809150509250925092565b6002810460018216806200027157607f821691505b602082108114156200029357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61090f80620002bf6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063313ce5671161007657806395d89b411161005b57806395d89b4114610136578063a9059cbb1461013e578063dd62ed3e14610151576100a3565b8063313ce5671461010e57806370a0823114610123576100a3565b806306fdde03146100a8578063095ea7b3146100c657806318160ddd146100e657806323b872dd146100fb575b600080fd5b6100b0610164565b6040516100bd91906105f3565b60405180910390f35b6100d96100d43660046105bf565b6101f6565b6040516100bd91906105e8565b6100ee610213565b6040516100bd9190610842565b6100d9610109366004610584565b610219565b6101166102b9565b6040516100bd919061084b565b6100ee610131366004610531565b6102c2565b6100b06102e1565b6100d961014c3660046105bf565b6102f0565b6100ee61015f366004610552565b610304565b60606000805461017390610888565b80601f016020809104026020016040519081016040528092919081815260200182805461019f90610888565b80156101ec5780601f106101c1576101008083540402835291602001916101ec565b820191906000526020600020905b8154815290600101906020018083116101cf57829003601f168201915b5050505050905090565b600061020a61020361032f565b8484610333565b50600192915050565b60035490565b6001600160a01b038316600090815260046020526040812081908161023c61032f565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102885760405162461bcd60e51b815260040161027f9061072b565b60405180910390fd5b6102938585856103e7565b6102ae8561029f61032f565b6102a98685610871565b610333565b506001949350505050565b60025460ff1690565b6001600160a01b0381166000908152600560205260409020545b919050565b60606001805461017390610888565b600061020a6102fd61032f565b84846103e7565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103595760405162461bcd60e51b815260040161027f90610646565b6001600160a01b03821661037f5760405162461bcd60e51b815260040161027f9061068a565b6001600160a01b0380841660008181526004602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103da908590610842565b60405180910390a3505050565b6103f2838383610515565b6001600160a01b0382166104185760405162461bcd60e51b815260040161027f906106e7565b6001600160a01b03831661043e5760405162461bcd60e51b815260040161027f90610788565b6001600160a01b0383166000908152600560205260409020548111156104765760405162461bcd60e51b815260040161027f906107e5565b6001600160a01b0383166000908152600560205260408120805483929061049e908490610871565b90915550506001600160a01b038216600090815260056020526040812080548392906104cb908490610859565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103da9190610842565b505050565b80356001600160a01b03811681146102dc57600080fd5b600060208284031215610542578081fd5b61054b8261051a565b9392505050565b60008060408385031215610564578081fd5b61056d8361051a565b915061057b6020840161051a565b90509250929050565b600080600060608486031215610598578081fd5b6105a18461051a565b92506105af6020850161051a565b9150604084013590509250925092565b600080604083850312156105d1578182fd5b6105da8361051a565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b8181101561061f57858101830151858201604001528201610603565b818111156106305783604083870101525b50601f01601f1916929092016040019392505050565b60208082526024908201527f5275696e3a3a41646472657373206f6620617070726f76657220697320696c6c6040820152631959d85b60e21b606082015260800190565b60208082526023908201527f5275696e3a3a41646472657373206f66207370656e64657220697320696c6c6560408201527f67616c0000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f5275696e3a3a41646472657373206f6620726563697069656e7420697320696c6040820152631959d85b60e21b606082015260800190565b60208082526027908201527f5275696e3a3a5472616e7366657220616d6f756e74206578636565647320616c60408201527f6c6f77616e636500000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f5275696e3a3a41646472657373206f662073656e64657220697320696c65676160408201527f6c00000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602d908201527f5275696e3a3a5472616e7366657220616d6f756e74206578636565647320616360408201527f636f756e742062616c616e636500000000000000000000000000000000000000606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561086c5761086c6108c3565b500190565b600082821015610883576108836108c3565b500390565b60028104600182168061089c57607f821691505b602082108114156108bd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205d524c1e3efdabcc60e6a0a4b1263e2ea5ff628446187c02acd66b94b867d2bf64736f6c63430008000033";
